from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi
from dotenv import load_dotenv
import os

load_dotenv()

def get_mongo_client():
    uri = os.getenv("MONGODB_URI")  # Replace with your MongoDB URI
    client = MongoClient(uri, server_api=ServerApi('1'))

    try:
        client.admin.command('ping')
        print("Pinged your deployment. You successfully connected to MongoDB!")
    except Exception as e:
        print(e)
    
    return client

# def to input the json generated meal plans in the database
# before inserting the meal plans into the database, we need to
# add a new field to the json object called model generated by which tells which model generated the meal plan
def insert_meal_plan_into_db(meal_plan, model):
    client = get_mongo_client()
    db = client['meal_plans']
    collection = db['weekly_plans']
    
    # Add the model field to the meal plan
    meal_plan['model'] = model
    
    # Insert the meal plan into the database
    result = collection.insert_one(meal_plan)
    
    print(f"Meal plan inserted with id: {result.inserted_id}")
    

# def to retrieve the meal plans from the database
def get_meal_plan():
    client = get_mongo_client()
    db = client['meal_plans']
    collection = db['weekly_plans']
    
    # Retrieve the meal plans from the database
    meal_plans = collection.find()
    
    for meal_plan in meal_plans:
        print(meal_plan)
        
    return meal_plans

# def that calls insert meal plan after going through the json files in the generated_meal_plans folder
def insert_meal_plans_from_files():
    import json
    import os
    
    folder_path = 'generated_meal_plans'
    
    for filename in os.listdir(folder_path):
        if filename.endswith('.json'):
            with open(os.path.join(folder_path, filename), 'r') as file:
                meal_plan = json.load(file)
                insert_meal_plan(meal_plan)
                print(f"Inserted meal plan from {filename}")


